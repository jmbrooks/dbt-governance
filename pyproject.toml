[tool.poetry]
name = "dbt-governance"
version = "0.1.0"
description = "A flexible governance tool for dbt projects, enabling teams to define and enforce custom rules for data quality, privacy, security, and compliance. Supports single and multi-project configurations, with integrations for local development and future compatibility with dbt Cloud. Includes features for metadata validation, test coverage checks, and rule-based governance health reporting."
authors = ["Johnathan Brooks <19945186+jmbrooks@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
# Compatible Python versions
python = "^3.9"
# Project dependencies
dbt-core = "^1.6"
jsonschema = "^4.19"
pyyaml = "^6.0"
colorama = "^0.4"
pydantic = "^2.10"
dbt-snowflake = "^1.9"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7"
black = "^23.9"
isort = "^5.13"
mypy = "^1.8"
pre-commit = "^4.0"
pytest = "^8.3"
pytest-cov = "^6.0"
ruff = "^0.1"
tox = "^4.5"
types-PyYAML = "^6.0.12.12"

[tool.poetry.scripts]
dbt-governance = "dbt_governance.cli:cli"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bandit]
exclude_dirs = ["data_build/", "logs/", "tests/", "env/", "venv/", "*venv/", ".env", ".env.*", ".git", ".tox/"]

[tool.black]
line-length = 120
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'

[tool.mypy]
mypy_path = "./dbt_governance:./tests"
strict = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E", # pep8 (pycodestyle) errors
    "F", # pep8 (pyflakes) formatting errors
    "N", # pep8 naming convention violations
    "W", # pep8 (pycodestyle) warnings
    "B", # flake8-bugbear design issues
    "C4", # flake8-comprehensions issues
    "ISC", # flake8 implicit string concat issues
    "Q", # flake8-quotes quote issues
    "RSE", # flake8-raise raise exception issues
    "T10", # flake8 debugger
    "T20", # flake8 print usage issues
    "YTT", # flake8-2020 sys version info issues
    "PIE", # flake8 misc linting issues
    "I", # isort import issues
    "TID", # tidy import flags
    "FLY", # flynt f-string usage issues
    "PERF", # perflint performance issues
    "PT", # pytest style and usage issues
    "PD", # pandas vet issues
    "RUF", # ruff issues
]
ignore = [
    "ISC001", # Implicit string concatenation, conflicts with formatting config
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--cov=dbt_governance --cov-report=term-missing --cov-fail-under=90"
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true
omit = [
    "tests/*",
    "dbt_governance/__init__.py"
]

[tool.coverage.report]
show_missing = true
fail_under = 90
